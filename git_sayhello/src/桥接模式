1.桥接模式概述
      桥接模式即将抽象部分与它的实现部分分离开来，使他们都可以独立变化。
      桥接模式将继承关系转化成关联关系，它降低了类与类之间的耦合度，减少了系统中类的数量，也减少了代码量。
      将抽象部分与他的实现部分分离这句话不是很好理解，其实这并不是将抽象类与他的派生类分离，而是抽象类和它的派生类用来实现自己的对象。
      这样还是不能理解的话。我们就先来认清什么是抽象化，什么是实现化，什么是脱耦。
    一句话：将抽象部分与他的实现部分分离套用《大话设计模式》里面的就是实现系统可能有多个角度分类，每一种角度都可能变化，
    那么把这种多角度分类给分离出来让他们独立变化，减少他们之间耦合。
2.桥接模式优点
    * 降低耦合
    * 多维度的类 独立，便于扩展
    应用场景：
            分析当前的类有没有多个维度（多个特性），如果有，可以使用桥接方式把多个维度分离开来。
            比如：包包：颜色和形状 就是两个维度
3.桥接模式的使用（固定步骤）
    分析类中多个维度：
        * 步骤一：其中一个  维度定义成一个接口
        * 步骤二：其中另一个维度定义成一个抽象类，在抽象类关联这个接口
        * 步骤三：具体实现时，
                    * 定义 一个维度的实现类  实现  维度接口
                    * 定义 一个维度的实现类 ，继承 维度的抽象类
                    * 使用： 抽象类（子类） 和 接口（子类）关联起来
    举个例子：
            实现 播放器 播放 不同类型的视频文件
            * 两个维度：
                    * 一个维度： 视频文件
                    * 一个维度： 播放器